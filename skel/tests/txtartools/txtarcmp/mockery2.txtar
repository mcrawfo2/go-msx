-- mockery.og --
// Code generated by mockery v2.21.1. DO NOT EDIT. Should be able to add anything here

package complianceevent

import (
	context "context"

	api "cto-github.cisco.com/NFV-BU/someservice/internal/stream/complianceevent/api"

	mock "github.com/stretchr/testify/mock"
)

// MockToggleComplianceRequestHandler is an autogenerated mock type for the ToggleComplianceRequestHandler type
type MockToggleComplianceRequestHandler struct {
	mock.Mock
}

// OnToggleComplianceRequest provides a mock function with given fields: ctx, payload
func (_m *MockToggleComplianceRequestHandler) OnToggleComplianceRequest(ctx context.Context, payload api.ToggleComplianceRequest) error {
	ret := _m.Called(ctx, payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, api.ToggleComplianceRequest) error); ok {
		r0 = rf(ctx, payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockToggleComplianceRequestHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockToggleComplianceRequestHandler creates a new instance of MockToggleComplianceRequestHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockToggleComplianceRequestHandler(t mockConstructorTestingTNewMockToggleComplianceRequestHandler) *MockToggleComplianceRequestHandler {
	mock := &MockToggleComplianceRequestHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
