// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	sqldb "cto-github.cisco.com/NFV-BU/go-msx/sqldb"
	mock "github.com/stretchr/testify/mock"
)

// CrudRepositoryFactoryApi is an autogenerated mock type for the CrudRepositoryFactoryApi type
type CrudRepositoryFactoryApi struct {
	mock.Mock
}

// NewCrudPreparedRepository provides a mock function with given fields: tableName
func (_m *CrudRepositoryFactoryApi) NewCrudPreparedRepository(tableName string) sqldb.CrudRepositoryApi {
	ret := _m.Called(tableName)

	var r0 sqldb.CrudRepositoryApi
	if rf, ok := ret.Get(0).(func(string) sqldb.CrudRepositoryApi); ok {
		r0 = rf(tableName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sqldb.CrudRepositoryApi)
		}
	}

	return r0
}

// NewCrudRepository provides a mock function with given fields: tableName
func (_m *CrudRepositoryFactoryApi) NewCrudRepository(tableName string) sqldb.CrudRepositoryApi {
	ret := _m.Called(tableName)

	var r0 sqldb.CrudRepositoryApi
	if rf, ok := ret.Get(0).(func(string) sqldb.CrudRepositoryApi); ok {
		r0 = rf(tableName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sqldb.CrudRepositoryApi)
		}
	}

	return r0
}

type mockConstructorTestingTNewCrudRepositoryFactoryApi interface {
	mock.TestingT
	Cleanup(func())
}

// NewCrudRepositoryFactoryApi creates a new instance of CrudRepositoryFactoryApi. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCrudRepositoryFactoryApi(t mockConstructorTestingTNewCrudRepositoryFactoryApi) *CrudRepositoryFactoryApi {
	mock := &CrudRepositoryFactoryApi{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
