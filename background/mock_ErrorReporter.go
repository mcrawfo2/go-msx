// Code generated by mockery v2.14.0. DO NOT EDIT.

package background

import mock "github.com/stretchr/testify/mock"

// MockErrorReporter is an autogenerated mock type for the ErrorReporter type
type MockErrorReporter struct {
	mock.Mock
}

// C provides a mock function with given fields:
func (_m *MockErrorReporter) C() <-chan struct{} {
	ret := _m.Called()

	var r0 <-chan struct{}
	if rf, ok := ret.Get(0).(func() <-chan struct{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan struct{})
		}
	}

	return r0
}

// Fatal provides a mock function with given fields: err
func (_m *MockErrorReporter) Fatal(err error) {
	_m.Called(err)
}

// NonFatal provides a mock function with given fields: err
func (_m *MockErrorReporter) NonFatal(err error) {
	_m.Called(err)
}

type mockConstructorTestingTNewMockErrorReporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockErrorReporter creates a new instance of MockErrorReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockErrorReporter(t mockConstructorTestingTNewMockErrorReporter) *MockErrorReporter {
	mock := &MockErrorReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
