// Code generated by mockery v2.14.0. DO NOT EDIT.

package discovery

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDiscoveryProvider is an autogenerated mock type for the DiscoveryProvider type
type MockDiscoveryProvider struct {
	mock.Mock
}

// Discover provides a mock function with given fields: ctx, name, healthyOnly, tags
func (_m *MockDiscoveryProvider) Discover(ctx context.Context, name string, healthyOnly bool, tags ...string) (ServiceInstances, error) {
	_va := make([]interface{}, len(tags))
	for _i := range tags {
		_va[_i] = tags[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, name, healthyOnly)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 ServiceInstances
	if rf, ok := ret.Get(0).(func(context.Context, string, bool, ...string) ServiceInstances); ok {
		r0 = rf(ctx, name, healthyOnly, tags...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ServiceInstances)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, bool, ...string) error); ok {
		r1 = rf(ctx, name, healthyOnly, tags...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DiscoverAll provides a mock function with given fields: ctx, healthyOnly, tags
func (_m *MockDiscoveryProvider) DiscoverAll(ctx context.Context, healthyOnly bool, tags ...string) (ServiceInstances, error) {
	_va := make([]interface{}, len(tags))
	for _i := range tags {
		_va[_i] = tags[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, healthyOnly)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 ServiceInstances
	if rf, ok := ret.Get(0).(func(context.Context, bool, ...string) ServiceInstances); ok {
		r0 = rf(ctx, healthyOnly, tags...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ServiceInstances)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, bool, ...string) error); ok {
		r1 = rf(ctx, healthyOnly, tags...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockDiscoveryProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDiscoveryProvider creates a new instance of MockDiscoveryProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDiscoveryProvider(t mockConstructorTestingTNewMockDiscoveryProvider) *MockDiscoveryProvider {
	mock := &MockDiscoveryProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
